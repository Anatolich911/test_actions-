name: Build and Deploy to AWS EB dev V2

# Controls when the workflow will run
on:
  # Triggers the workflow on push request events but only for the "development" branch
  push:
    branches: [ "development" ]
    paths-ignore: [ "README.md", ".gitignore", ".github/**" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment:
      name: dev
    permissions:
      pull-requests: write
      id-token: write
      contents: read

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v4
  
      # GH Actions OpenIDConnect
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::058253789961:role/beanstalk-publish
          aws-region: us-east-1
     
      # Runs a single command using the runners shell
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin' 

      - name: Version setup
        run: |
          export SHA=$(echo "${{ github.sha }}" | cut -c 1-6)
          echo "SHA=$SHA" >> $GITHUB_ENV
          export VERSION=`cd media-ws && mvn -B org.apache.maven.plugins:maven-help-plugin:2.1.1:evaluate -Dexpression=project.version | grep -Ev '(^\[|\w+:)'`
          export TIMESTAMP=`date +"%Y-%m-%d-%H.%M.%S"`
          export VERSION_LABEL="${VERSION}-${SHA}-${TIMESTAMP}"
          echo "VERSION_LABEL=$VERSION_LABEL" >> "$GITHUB_ENV"

      - name: Build
        run: mvn -B clean package -Dversion.label=$VERSION_LABEL -Denvironment=DEV

      - name: WAR to ZIP
        run: |
          mv media-ws/target/${{ env.VERSION_LABEL }}.war media-ws/target/${{ env.VERSION_LABEL }}.zip

      - name: Publish
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ env.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws_session_token: ${{ env.AWS_SESSION_TOKEN }}
          application_name: media-ws
          environment_name: media-ws-dev
          version_label: ${{ env.VERSION_LABEL }}
          region: us-east-1
          deployment_package: media-ws/target/${{ env.VERSION_LABEL }}.zip
          existing_bucket_name: elasticbeanstalk-us-east-1-058253789961

      - name: Send custom JSON data to Slack workflow
        id: slack
        uses: slackapi/slack-github-action@v1.24.0
        with:
          # For posting a rich message using Block Kit
         payload: |
           {
             "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
             "blocks": [
               {
                 "type": "section",
                 "text": {
                   "type": "mrkdwn",
                   "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                 }
               }
            ]
           }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK